{
  "version": 3,
  "sources": ["../../../../app/routes/pipelines/new.tsx"],
  "sourcesContent": ["import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createPipeline } from \"~/models/pipeline.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { Square3Stack3DIcon as PipelineIcon } from \"@heroicons/react/24/outline\";\n\nexport async function action({ request }: ActionArgs) {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n\n  if (typeof name !== \"string\" || name.length === 0) {\n    return json(\n      { errors: { name: \"name is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const pipeline = await createPipeline({ name, userId });\n\n  return redirect(`/pipelines/${pipeline.id}`);\n}\n\nexport default function NewPipelinePage() {\n  const actionData = useActionData<typeof action>();\n  const nameRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.name) {\n      nameRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const inputColorClasses = actionData?.errors?.name ?\n    \"border-red-300 focus:border-red-500 focus:ring-red-500 focus-visible:outline-red-500 placeholder-red-400\" :\n    \"border-gray-300 focus:border-blue-500 focus:ring-blue-500\";\n\n  return (\n    <Form\n      method=\"post\"\n      className=\"mx-auto max-w-xl mt-10\"\n    >\n      <div>\n        <div className=\"text-center\">\n          <PipelineIcon className=\"mx-auto h-10 w-10 text-gray-400\" />\n          <h2 className=\"mt-1 text-lg font-medium text-gray-900\">Create new pipeline</h2>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Pipelines allow you to merge, filter, and aggregate data for easy reuse in the future.\n          </p>\n        </div>\n        <div className=\"mt-6 flex\">\n          <label htmlFor=\"name\" className=\"sr-only\">\n            Pipeline name\n          </label>\n          <input\n            ref={nameRef}\n            name=\"name\"\n            className={\"block w-full px-3 rounded border shadow-sm sm:text-sm \" + inputColorClasses}\n            placeholder=\"Enter a name for your pipeline\"\n            aria-invalid={actionData?.errors?.name ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.name ? \"name-error\" : undefined\n            }\n          />\n          <button\n            type=\"submit\"\n            className=\"ml-4 flex-shrink-0 rounded border border-transparent bg-blue-600 px-4 py-2\n            text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2\n            focus:ring-blue-500 focus:ring-offset-2\"\n          >\n            Create Pipeline\n          </button>\n        </div>\n      </div>\n\n      <div>\n        {actionData?.errors?.name && (\n          <div className=\"mt-2 text-sm text-red-600\" id=\"name-error\">\n            {actionData.errors.name[0].toUpperCase() + actionData.errors.name.slice(1) /* quickly uppercase first letter */}\n          </div>\n        )}\n      </div>\n    </Form>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAGA,YAAuB;AAEvB,sBAA+B;AAC/B,qBAA8B;AAC9B,qBAAmD;AAyCzC;AArBK,SAAR,kBAAmC;AA3B1C;AA4BE,QAAM,aAAa,cAA6B;AAChD,QAAM,UAAgB,aAAyB,IAAI;AAEnD,EAAM,gBAAU,MAAM;AA/BxB,QAAAA,KAAAC;AAgCI,SAAID,MAAA,yCAAY,WAAZ,gBAAAA,IAAoB,MAAM;AAC5B,OAAAC,MAAA,QAAQ,YAAR,gBAAAA,IAAiB;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,UAAU,CAAC;AAEf,QAAM,sBAAoB,8CAAY,WAAZ,mBAAoB,QAC5C,6GACA;AAEF,SACE;AAAA,IAAC;AAAA;AAAA,MACC,QAAO;AAAA,MACP,WAAU;AAAA,MAEV;AAAA,2DAAC,SACC;AAAA,6DAAC,SAAI,WAAU,eACb;AAAA,+DAAC,eAAAC,oBAAA,EAAa,WAAU,qCAAxB;AAAA;AAAA;AAAA;AAAA,mBAA0D;AAAA,YAC1D,mDAAC,QAAG,WAAU,0CAAyC,mCAAvD;AAAA;AAAA;AAAA;AAAA,mBAA0E;AAAA,YAC1E,mDAAC,OAAE,WAAU,8BAA6B,sGAA1C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UACA,mDAAC,SAAI,WAAU,aACb;AAAA,+DAAC,WAAM,SAAQ,QAAO,WAAU,WAAU,6BAA1C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACC,KAAK;AAAA,gBACL,MAAK;AAAA,gBACL,WAAW,2DAA2D;AAAA,gBACtE,aAAY;AAAA,gBACZ,kBAAc,8CAAY,WAAZ,mBAAoB,QAAO,OAAO;AAAA,gBAChD,uBACE,8CAAY,WAAZ,mBAAoB,QAAO,eAAe;AAAA;AAAA,cAP9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASA;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,WAAU;AAAA,gBAGX;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA;AAAA,eArBF;AAAA;AAAA;AAAA;AAAA,iBAsBA;AAAA,aA9BF;AAAA;AAAA;AAAA;AAAA,eA+BA;AAAA,QAEA,mDAAC,SACE,0DAAY,WAAZ,mBAAoB,SACnB,mDAAC,SAAI,WAAU,6BAA4B,IAAG,cAC3C,qBAAW,OAAO,KAAK,GAAG,YAAY,IAAI,WAAW,OAAO,KAAK,MAAM,CAAC,KAD3E;AAAA;AAAA;AAAA;AAAA,eAEA,KAJJ;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA;AAAA;AAAA,IA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4CA;AAEJ;",
  "names": ["_a", "_b", "PipelineIcon"]
}
